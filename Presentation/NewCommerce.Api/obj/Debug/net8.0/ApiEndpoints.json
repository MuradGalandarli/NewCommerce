[
  {
    "ContainingType": "NewCommerce.Api.Controllers.ApplicatonServicesController",
    "Method": "GetAuthorizeDefinitionEndponts",
    "RelativePath": "api/ApplicatonServices/GetAuthorizeDefinitionEndpoints",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.AuthController",
    "Method": "ExampleMailTest",
    "RelativePath": "api/Auth",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.AuthController",
    "Method": "FacebookLogin",
    "RelativePath": "api/Auth/facebook-login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "facebookLoginCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.AppUser.FacebookLogin.FacebookLoginCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.AuthController",
    "Method": "GoogleLogin",
    "RelativePath": "api/Auth/google-login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "googleLoginCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.AppUser.GoogleLogin.GoogleLoginCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginUserCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.AppUser.LoginUser.LoginUserCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.AuthController",
    "Method": "PasswordReset",
    "RelativePath": "api/Auth/password-reset",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "passwordResetCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.AppUser.PasswordReset.PasswordResetCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.AuthController",
    "Method": "RefreshTokenLogin",
    "RelativePath": "api/Auth/RefreshTokenLogin",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "RefreshToken",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.AuthController",
    "Method": "VerifyResetToken",
    "RelativePath": "api/Auth/verify-reset-token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "verifyResetTokenRequest",
        "Type": "NewCommerce.Application.Features.Commands.VerifyResetToken.VerifyResetTokenRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.BasketsController",
    "Method": "GetBasketItems",
    "RelativePath": "api/Baskets",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "getBasketItemsQueryRequest",
        "Type": "NewCommerce.Application.Features.Queries.Basket.GetBasketItems.GetBasketItemsQueryRequest",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.BasketsController",
    "Method": "AddItemToBasket",
    "RelativePath": "api/Baskets",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addItemToBasketCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.Basket.AddItemToBasket.AddItemToBasketCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.BasketsController",
    "Method": "UpdateQuantity",
    "RelativePath": "api/Baskets",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateQuantityCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.Basket.UpdateQuantity.UpdateQuantityCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.BasketsController",
    "Method": "RemoveBasketItem",
    "RelativePath": "api/Baskets/{BasketItemId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "BasketItemId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.FilesController",
    "Method": "GetBaseStorageUrl",
    "RelativePath": "api/Files/GetBaseStorageUrl",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.OrderController",
    "Method": "CreateOrder",
    "RelativePath": "api/Order",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createOrderCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.Order.CreateOrder.CreateOrderCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.OrderController",
    "Method": "GetAllOrders",
    "RelativePath": "api/Order",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Size",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.OrderController",
    "Method": "GetOrderById",
    "RelativePath": "api/Order/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.OrderController",
    "Method": "CompletedOrder",
    "RelativePath": "api/Order/completed-order",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.ProductController",
    "Method": "GetAllProduct",
    "RelativePath": "api/Product",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Size",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.ProductController",
    "Method": "Upload",
    "RelativePath": "api/Product/action/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "formFile",
        "Type": "Microsoft.AspNetCore.Http.IFormFileCollection",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.ProductController",
    "Method": "AddProduct",
    "RelativePath": "api/Product/AddProduct",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "NewCommerce.Application.Features.Commands.Product.CreateProduct.CreateProductCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.ProductController",
    "Method": "ChangeShowcaseImage",
    "RelativePath": "api/Product/ChangeShowcaseImage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ImageId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ProductId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.ProductController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Product/DeleteProduct/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.ProductController",
    "Method": "DeleteProductImage",
    "RelativePath": "api/Product/DeleteProductImage",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deleteProductImageCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.ProductImageFile.DeleteProductImage.DeleteProductImageCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.ProductController",
    "Method": "Get",
    "RelativePath": "api/Product/GetByIdProduct",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.ProductController",
    "Method": "GetProductImage",
    "RelativePath": "api/Product/GetProductIdAllImage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.ProductController",
    "Method": "ProductUpdate",
    "RelativePath": "api/Product/ProductUpdate",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateProductCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.Product.UpdateProduct.UpdateProductCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.UsersController",
    "Method": "CreateUser",
    "RelativePath": "api/Users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createUserCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.AppUser.CreateUser.CreateUserCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.UsersController",
    "Method": "UpdatePasswordCommand",
    "RelativePath": "api/Users/update-password-command",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updatePasswordCommandRequest",
        "Type": "NewCommerce.Application.Features.Commands.AppUser.UpdatePassword.UpdatePasswordCommandRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NewCommerce.Api.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[NewCommerce.Api.WeatherForecast, NewCommerce.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]